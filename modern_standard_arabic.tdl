;;; -*- Mode: TDL; Coding: utf-8 -*-
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; Grammar of Modern_Standard_Arabic
;;; created at:
;;;     Fri Jan 26 19:48:23 UTC 2024
;;; based on Matrix customization system version of:
;;;     Fri 27 Oct 2023 04:16:13 PM UTC
;;;
;;; 
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; Type assigning empty mod list. Added to basic types for nouns, verbs and determiners.

non-mod-lex-item := lex-item &
  [ SYNSEM.LOCAL.CAT.HEAD.MOD < > ].

;;;;;;;;;;;;;;;;;;;;;;;;;
;;; Matrix Type Addenda
;;;;;;;;;;;;;;;;;;;;;;;;;

basic-head-comp-phrase :+ [ SYNSEM [ LIGHT #light,
             LOCAL.CAT [ HC-LIGHT #light,
                         MC #mc ] ],
    HEAD-DTR.SYNSEM.LOCAL.CAT.MC #mc ].

head :+ [ PRON bool,
    FORM form,
    AUX bool ].

noun :+ [ CASE case ].

png :+ [ PER person,
    NUM number,
    GEND gender ].

basic-head-opt-subj-phrase :+ [ HEAD-DTR.SYNSEM.LOCAL.CAT.VAL.COMPS < > ].

; We can't just use the V-final and V-initial word
; order modules together to get a good free word order
; module. The root of the problem seems to be that we
; need the subject to be able to attach inside the
; object(s) for VSO and OSV, but at the same time, we
; don't want complete flexibility on order of attachment
; when the verb is in the middle -- that would give
; spurious ambiguity.  This solution adopts the xmod
; hierarchy to enforce right-first attachment.  That is,
; all arguments appears to the right of the verb must
; attach before all arguments appearing to the left.  The
; linguistic prediction of this analysis is that free
; word order languages do not have a consistent VP
; consituent, even when the verb and object are adjacent
; (OV order).  Using a separate feature for tracking
; argument attachment (as opposed to modifier
; attachment).  We might be able to collapse these one
; day, but that's not obvious.

synsem :+ [ ATTACH xmod ].

; We'll need to add identification of ATTACH between
;     mother and head-daughter for all other kinds of phrases
;     if we do this.  Just for illustration, I'm putting it
;     in for head-adjunct phrases here:

head-mod-phrase :+ [ SYNSEM.ATTACH #attach,
    HEAD-DTR.SYNSEM.ATTACH #attach ].

;;;;;;;;;;;;;;
;;; Features
;;;;;;;;;;;;;;

;;; Person

person := *top*.
1st := person.
2nd := person.
3rd := person.

;;; Number

number := *top*.
sg := number.
dual := number.
pl := number.

;;; Gender

gender := *top*.
masc := gender.
fem := gender.

;;; Case

case := *top*.
nom := case.  ; nominative
acc := case.  ; accusative

;;; Form

form := *top*.
nonfinite := form.
finite := form.

;;; Aspect

perfective := aspect.
imperfective := aspect.

;;;;;;;;;;;;;;;;;;;
;;; Lexical Types
;;;;;;;;;;;;;;;;;;;

;;; Nouns

noun-lex := basic-noun-lex & basic-non-wh-word-lex & non-local-none-lex-item & no-hcons-lex-item & non-mod-lex-item &
  [ ARG-ST < #spr >,
    SYNSEM.LOCAL.CAT.VAL [ COMPS < >,
                           SUBJ < >,
                           SPEC < >,
                           SPR < #spr &
                                 [ LOCAL.CAT.HEAD det,
                                   OPT + ] > ] ].

; Nouns which cannot take specifiers mark their SPR requirement
; as OPT +.  Making the non-head daughter OPT - in this rule
; keeps such nouns out.
; 
; Rules for building NPs.  Note that the Matrix uses SPR for
; the specifier of nouns and SUBJ for the subject (specifier) of verbs.

head-spec-phrase := basic-head-spec-phrase & head-final &
  [ NON-HEAD-DTR.SYNSEM.OPT - ].

common_3sg_masc-noun-lex := noun-lex & case-rule-dtr & det-rule-dtr &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG [ GEND masc,
                                       PER 3rd,
                                       NUM sg ] ].

proper-noun-lex := noun-lex & case-rule-dtr & det-rule-dtr.

ind_subj_pn-noun-lex := noun-lex &
  [ SYNSEM.LOCAL [ CAT.HEAD [ PRON +,
                              CASE nom ],
                   CONT.HOOK.INDEX.PNG.GEND masc ] ].

ind_obj_pn-noun-lex := noun-lex &
  [ SYNSEM.LOCAL [ CAT.HEAD [ PRON +,
                              CASE acc ],
                   CONT.HOOK.INDEX.PNG.GEND masc ] ].

common_3plmasc-noun-lex := noun-lex & case-rule-dtr & det-rule-dtr &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG [ NUM pl,
                                       PER 3rd,
                                       GEND masc ] ].

common_3sgfem-noun-lex := noun-lex & case-rule-dtr & det-rule-dtr &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG [ NUM sg,
                                       PER 3rd,
                                       GEND fem ] ].

common_3plfem-noun-lex := noun-lex & case-rule-dtr & det-rule-dtr &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG [ PER 3rd,
                                       NUM pl,
                                       GEND fem ] ].

common_3dual_fem-noun-lex := noun-lex &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG [ NUM dual,
                                       PER 3rd,
                                       GEND fem ] ].

common_3dual_masc-noun-lex := noun-lex.

1persgpronoun-noun-lex := noun-lex &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG [ PER 1st,
                                       NUM sg ] ].

1stperplural-noun-lex := noun-lex.

;;; Verbs

; verb-lex is HC-LIGHT - to allow us to pick out
; 
;   lexical Vs for V-level attachment of negative adverbs.

verb-lex := non-mod-lex-item &
  [ SYNSEM [ L-QUE -,
             LOCAL.CAT [ HEAD verb,
                         HC-LIGHT - ] ] ].

main-verb-lex := verb-lex & basic-verb-lex & basic-non-wh-word-lex &
  [ SYNSEM [ L-QUE -,
             LOCAL [ CAT [ HEAD.AUX -,
                           VAL [ SPEC < >,
                                 SUBJ < #subj > ] ],
                     CONT.HOOK.XARG #xarg ] ],
    ARG-ST.FIRST #subj &
                 [ LOCAL [ CAT cat-sat &
                               [ VAL [ SPR < >,
                                       COMPS < > ] ],
                           CONT.HOOK.INDEX #xarg ] ] ].

aux-lex := verb-lex & basic-icons-lex-item &
  [ SYNSEM [ LOCAL.CAT.HEAD.AUX +,
             L-QUE - ] ].

intransitive-verb-lex := main-verb-lex & intransitive-lex-item &
  [ SYNSEM.LOCAL.CAT.VAL.COMPS < >,
    ARG-ST.FIRST.LOCAL.CAT.HEAD noun ].

transitive-verb-lex := main-verb-lex & transitive-lex-item &
  [ SYNSEM.LOCAL.CAT.VAL.COMPS < #comps >,
    ARG-ST < [ LOCAL.CAT.HEAD noun ],
             #comps &
             [ LOCAL.CAT cat-sat &
                         [ VAL [ SPR < >,
                                 COMPS < > ],
                           HEAD noun ] ] > ].

nom-intransitive-verb-lex := intransitive-verb-lex &
  [ ARG-ST.FIRST.LOCAL.CAT.HEAD noun &
                                [ CASE nom ] ].

nom-acc-transitive-verb-lex := transitive-verb-lex &
  [ ARG-ST < [ LOCAL.CAT.HEAD noun &
                              [ CASE nom ] ],
             [ LOCAL.CAT.HEAD noun &
                              [ CASE acc ] ] > ].

intr-verb-lex := nom-intransitive-verb-lex.

trans-verb-lex := nom-acc-transitive-verb-lex.

;;; Auxiliaries

subj-raise-aux := aux-lex & trans-first-arg-raising-lex-item &
  [ SYNSEM.LOCAL [ CAT.VAL [ SPEC < >,
                             COMPS < #comps >,
                             SUBJ < #subj > ],
                   CONT.HOOK.XARG #xarg ],
    ARG-ST < #subj &
             [ LOCAL [ CAT [ HEAD noun &
                                  [ CASE #case ],
                             VAL [ SUBJ < >,
                                   SPR < >,
                                   SPEC < >,
                                   COMPS < > ] ],
                       CONT.HOOK.INDEX #xarg ] ],
             #comps &
             [ LOCAL.CAT [ HEAD verb &
                                [ AUX - ],
                           VAL [ COMPS < >,
                                 SPR < >,
                                 SPEC < >,
                                 SUBJ < unexpressed &
                                        [ LOCAL.CAT.HEAD.CASE #case ] > ] ] ] > ].

subj-raise-aux-with-pred := subj-raise-aux & norm-sem-lex-item & trans-first-arg-raising-lex-item-1.

neg_prog-aux-lex := subj-raise-aux-with-pred &
  [ SYNSEM.LOCAL.CAT.VAL.COMPS.FIRST.LOCAL [ CAT.HEAD.FORM nonfinite,
                                             CONT.HOOK.INDEX.E.ASPECT imperfective ] ].

neg_perf-aux-lex := subj-raise-aux-with-pred &
  [ SYNSEM.LOCAL.CAT.VAL.COMPS.FIRST.LOCAL [ CONT.HOOK.INDEX.E.ASPECT perfective,
                                             CAT.HEAD.FORM nonfinite ] ].

;;; Adjectives

adj-lex := basic-intersective-adjective-lex & caseagr-rule-dtr.

common-adj-lex := attr-adj-lex & stative-pred-adj-lex &
  [ SYNSEM.LOCAL.CAT.HEAD.PRD - ].

; Basic attributive adjective definition

attr-adj-lex := adj-lex & intersective-mod-lex &
  [ SYNSEM.LOCAL.CAT.HEAD.MOD < [ LOCAL.CAT [ HEAD noun,
                                              VAL.SPR cons ] ] > ].

; Stative predicate adjective definition

stative-pred-adj-lex := adj-lex &
  [ SYNSEM.LOCAL [ CAT.VAL.SUBJ < [ LOCAL [ CONT.HOOK.INDEX #xarg,
                                            CAT [ VAL [ SPR < >,
                                                        COMPS < > ],
                                                  HEAD noun ] ] ] >,
                   CONT.HOOK.XARG #xarg ] ].

;;; Complementizers

; We treat question particles as complementizers.
; Here is the lexical type for complementizers.

complementizer-lex-item := raise-sem-lex-item & non-local-none-lex-item & basic-icons-lex-item &
  [ SYNSEM.LOCAL.CAT [ HEAD comp &
                            [ MOD < > ],
                       VAL [ SPR < >,
                             SPEC < >,
                             SUBJ < >,
                             COMPS < #comp > ] ],
    ARG-ST < #comp &
             [ LOCAL.CAT [ HEAD verb,
                           VAL [ SUBJ < >,
                                 COMPS < > ] ] ] > ].

; Subtype for question particles. Constrains SF to ques.

qpart-lex-item := complementizer-lex-item &
  [ SYNSEM.LOCAL [ CONT.HOOK.INDEX.SF ques,
                   CAT.VAL.COMPS.FIRST.LOCAL.CAT.HEAD.FORM finite ] ].

q-particle1-lex := qpart-lex-item &
  [ SYNSEM.LOCAL.CAT [ MC #mc,
                       VAL.COMPS.FIRST.LOCAL.CAT.MC #mc & + ] ].

q-particle2-lex := qpart-lex-item &
  [ SYNSEM.LOCAL.CAT [ MC #mc,
                       VAL.COMPS.FIRST.LOCAL.CAT.MC #mc & + ] ].

;;; Others

;;; Determiners
;;; SPEC is non-empty, and already specified by basic-determiner-lex.

determiner-lex := basic-determiner-lex & basic-non-wh-word-lex & norm-zero-arg & non-mod-lex-item &
  [ SYNSEM.LOCAL.CAT.VAL [ SPR < >,
                           COMPS < >,
                           SUBJ < > ] ].

;;; Adverbs

; Type for negative adverbs.
; 
; This adverb should go through a specialized phrase structure rule
;                           included with this grammar.

neg-adv-lex := basic-scopal-adverb-lex &
  [ SYNSEM.LOCAL.CAT [ VAL [ SPR < >,
                             COMPS < >,
                             SUBJ < >,
                             SPEC < > ],
                       POSTHEAD -,
                       HEAD.MOD < [ LOCAL.CAT [ HEAD verb,
                                                VAL [ SUBJ cons,
                                                      COMPS null ] ] ] > ] ].

;;;;;;;;;;;;;;;;;;;
;;; Lexical Rules
;;;;;;;;;;;;;;;;;;;

;;; Intermediate rule types

case-rule-dtr := word-or-lexrule.
det-rule-dtr := word-or-lexrule.
caseagr-rule-dtr := word-or-lexrule.

;;; Lexical rule types

case-lex-rule-super := add-only-no-ccont-rule & det-rule-dtr & infl-lex-rule &
  [ DTR case-rule-dtr ].

subject-lex-rule := case-lex-rule-super &
  [ SYNSEM.LOCAL.CAT.HEAD.CASE nom ].

object-lex-rule := case-lex-rule-super &
  [ SYNSEM.LOCAL.CAT.HEAD.CASE acc ].

genitive-lex-rule := case-lex-rule-super.

det-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule &
  [ DTR det-rule-dtr ].

the-lex-rule := det-lex-rule-super.

verb_suffix-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule &
  [ DTR verb-lex ].

imperf-lex-rule := verb_suffix-lex-rule-super &
  [ SYNSEM.LOCAL [ CONT.HOOK.INDEX.E.ASPECT imperfective,
                   CAT.HEAD.FORM nonfinite ] ].

perf-lex-rule := verb_suffix-lex-rule-super &
  [ SYNSEM.LOCAL [ CAT.HEAD.FORM nonfinite,
                   CONT.HOOK.INDEX.E.ASPECT perfective ] ].

3sgm-lex-rule := verb_suffix-lex-rule-super &
  [ SYNSEM.LOCAL.CAT.VAL.SUBJ.FIRST.LOCAL.CONT.HOOK.INDEX.PNG [ NUM sg,
                                                                PER 3rd,
                                                                GEND masc ] ].

3sgfem-lex-rule := verb_suffix-lex-rule-super &
  [ SYNSEM.LOCAL.CAT.VAL.SUBJ.FIRST.LOCAL.CONT.HOOK.INDEX.PNG [ NUM sg,
                                                                PER 3rd,
                                                                GEND fem ] ].

3plm-lex-rule := verb_suffix-lex-rule-super &
  [ SYNSEM.LOCAL.CAT.VAL.SUBJ.FIRST.LOCAL.CONT.HOOK.INDEX.PNG [ NUM pl,
                                                                PER 3rd,
                                                                GEND masc ] ].

3plfem-lex-rule := verb_suffix-lex-rule-super &
  [ SYNSEM.LOCAL.CAT.VAL.SUBJ.FIRST.LOCAL.CONT.HOOK.INDEX.PNG [ NUM pl,
                                                                PER 3rd,
                                                                GEND fem ] ].

3dualfem-lex-rule := verb_suffix-lex-rule-super &
  [ SYNSEM.LOCAL.CAT.VAL.SUBJ.FIRST.LOCAL.CONT.HOOK.INDEX.PNG [ NUM dual,
                                                                PER 3rd,
                                                                GEND fem ] ].

3dualmasc-lex-rule := verb_suffix-lex-rule-super &
  [ SYNSEM.LOCAL.CAT.VAL.SUBJ.FIRST.LOCAL.CONT.HOOK.INDEX.PNG [ NUM dual,
                                                                PER 3rd,
                                                                GEND masc ] ].

detagr-lex-rule-super := add-only-no-ccont-rule & caseagr-rule-dtr & infl-lex-rule &
  [ DTR common-adj-lex ].

detagrpos-lex-rule := detagr-lex-rule-super.

caseagr-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule &
  [ DTR caseagr-rule-dtr ].

caseagrnom-lex-rule := caseagr-lex-rule-super &
  [ SYNSEM.LOCAL.CAT.HEAD.CASE nom ].

caseagracc-lex-rule := caseagr-lex-rule-super &
  [ SYNSEM.LOCAL.CAT.HEAD.CASE acc ].

;;;;;;;;;;;;;;;;;;;
;;; Phrasal Types
;;;;;;;;;;;;;;;;;;;

;Constraint on MC used to be part of matrix.tdl
;;it applies to all wo implementations, except for v2

head-final-head-nexus := head-final &
  [ SYNSEM.ATTACH lmod,
    HEAD-DTR.SYNSEM.ATTACH notmod-or-lmod ].

head-initial-head-nexus := head-initial &
  [ SYNSEM.ATTACH rmod ].

head-subj-phrase := decl-head-subj-phrase & head-initial-head-nexus.

subj-head-phrase := decl-head-subj-phrase & head-final-head-nexus.

head-comp-phrase := basic-head-1st-comp-phrase & head-initial-head-nexus.

; The head of comp-head-phrase can't be: ['comp']

comp-head-phrase := basic-head-1st-comp-phrase & head-final-head-nexus &
  [ SYNSEM.LOCAL.CAT.HEAD +nvjrpdmo &
                          [ AUX - ] ].

head-comp-phrase-2 := basic-head-2nd-comp-phrase & head-initial-head-nexus.

comp-head-phrase-2 := basic-head-2nd-comp-phrase & head-final-head-nexus.

; Bare NP phrase.  Consider modifying the PRED value of the quantifier relation
; introduced to match the semantic effect of bare NPs in your language.

bare-np-phrase := basic-bare-np-phrase &
  [ C-CONT.RELS.LIST < [ PRED "exist_q_rel" ] >,
    SYNSEM.LOCAL [ CAT.HEAD.CASE #case,
                   CONT.HOOK.INDEX.PNG #png ],
    HEAD-DTR.SYNSEM.LOCAL [ CAT.HEAD.CASE #case,
                            CONT.HOOK.INDEX.PNG #png ] ].

basic-filler-phrase :+ [ SYNSEM.NON-LOCAL.SLASH.LIST < >,
    ARGS < [ SYNSEM [ LOCAL #slash,
                      NON-LOCAL.SLASH.LIST < > ] ],
           [ SYNSEM.NON-LOCAL.SLASH.LIST < #slash > ] > ].

extracted-subj-phrase := basic-extracted-subj-phrase &
  [ SYNSEM.LOCAL.CAT.HEAD verb ].

;;; Wh-question-related phrasal types

;;;;;;;;;;;;;;;;;;
;;; Coordination
;;;;;;;;;;;;;;;;;;

;;; Feature Resolution Rules

sg-sg-dual-num-coord-rule := coord-phrase &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG.NUM dual,
    LCOORD-DTR.SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG.NUM sg,
    RCOORD-DTR.SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG.NUM sg ].

dual-dual-pl-num-coord-rule := coord-phrase &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG.NUM pl,
    LCOORD-DTR.SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG.NUM dual,
    RCOORD-DTR.SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG.NUM dual ].

pl-pl-pl-num-coord-rule := coord-phrase &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG.NUM pl,
    LCOORD-DTR.SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG.NUM pl,
    RCOORD-DTR.SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG.NUM pl ].

sg-dual-pl-num-coord-rule := coord-phrase &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG.NUM pl,
    LCOORD-DTR.SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG.NUM sg,
    RCOORD-DTR.SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG.NUM dual ].

sg-pl-pl-num-coord-rule := coord-phrase &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG.NUM pl,
    LCOORD-DTR.SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG.NUM sg,
    RCOORD-DTR.SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG.NUM pl ].

dual-sg-pl-num-coord-rule := coord-phrase &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG.NUM pl,
    LCOORD-DTR.SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG.NUM dual,
    RCOORD-DTR.SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG.NUM sg ].

dual-pl-pl-num-coord-rule := coord-phrase &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG.NUM pl,
    LCOORD-DTR.SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG.NUM dual,
    RCOORD-DTR.SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG.NUM pl ].

pl-dual-pl-num-coord-rule := coord-phrase &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG.NUM pl,
    LCOORD-DTR.SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG.NUM pl,
    RCOORD-DTR.SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG.NUM dual ].

pl-sg-pl-num-coord-rule := coord-phrase &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG.NUM pl,
    LCOORD-DTR.SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG.NUM pl,
    RCOORD-DTR.SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG.NUM sg ].

pass-up-png-coord-rule := bottom-coord-phrase &
  [ SYNSEM.LOCAL [ CAT.HEAD.CASE #case,
                   CONT.HOOK.INDEX.PNG #png ],
    NONCONJ-DTR.SYNSEM.LOCAL [ CAT.HEAD.CASE #case,
                               CONT.HOOK.INDEX.PNG #png ] ].

same-same-same-case-coord-rule := coord-phrase &
  [ SYNSEM.LOCAL.CAT.HEAD.CASE #case,
    LCOORD-DTR.SYNSEM.LOCAL.CAT.HEAD.CASE #case,
    RCOORD-DTR.SYNSEM.LOCAL.CAT.HEAD.CASE #case ].

masc-any-masc-gend-coord-rule := coord-phrase &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG.GEND masc,
    LCOORD-DTR.SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG.GEND masc ].

fem-fem-fem-gend-coord-rule := coord-phrase &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG.GEND fem,
    LCOORD-DTR.SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG.GEND fem,
    RCOORD-DTR.SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG.GEND fem ].

any-masc-masc-gend-coord-rule := coord-phrase &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG.GEND masc,
    RCOORD-DTR.SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG.GEND masc ].

;;; Coordination Strategy 1

n1-sg-sg-dual-same-same-same-masc-any-masc-top-coord-rule := basic-n-top-coord-rule & monopoly-top-coord-rule & sg-sg-dual-num-coord-rule & same-same-same-case-coord-rule & masc-any-masc-gend-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

n1-sg-sg-dual-same-same-same-masc-any-masc-mid-coord-rule := basic-n-mid-coord-rule & monopoly-mid-coord-rule & sg-sg-dual-num-coord-rule & same-same-same-case-coord-rule & masc-any-masc-gend-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

n1-sg-sg-dual-same-same-same-fem-fem-fem-top-coord-rule := basic-n-top-coord-rule & monopoly-top-coord-rule & sg-sg-dual-num-coord-rule & same-same-same-case-coord-rule & fem-fem-fem-gend-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

n1-sg-sg-dual-same-same-same-fem-fem-fem-mid-coord-rule := basic-n-mid-coord-rule & monopoly-mid-coord-rule & sg-sg-dual-num-coord-rule & same-same-same-case-coord-rule & fem-fem-fem-gend-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

n1-sg-sg-dual-same-same-same-any-masc-masc-top-coord-rule := basic-n-top-coord-rule & monopoly-top-coord-rule & sg-sg-dual-num-coord-rule & same-same-same-case-coord-rule & any-masc-masc-gend-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

n1-sg-sg-dual-same-same-same-any-masc-masc-mid-coord-rule := basic-n-mid-coord-rule & monopoly-mid-coord-rule & sg-sg-dual-num-coord-rule & same-same-same-case-coord-rule & any-masc-masc-gend-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

n1-dual-dual-pl-same-same-same-masc-any-masc-top-coord-rule := basic-n-top-coord-rule & monopoly-top-coord-rule & dual-dual-pl-num-coord-rule & same-same-same-case-coord-rule & masc-any-masc-gend-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

n1-dual-dual-pl-same-same-same-masc-any-masc-mid-coord-rule := basic-n-mid-coord-rule & monopoly-mid-coord-rule & dual-dual-pl-num-coord-rule & same-same-same-case-coord-rule & masc-any-masc-gend-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

n1-dual-dual-pl-same-same-same-fem-fem-fem-top-coord-rule := basic-n-top-coord-rule & monopoly-top-coord-rule & dual-dual-pl-num-coord-rule & same-same-same-case-coord-rule & fem-fem-fem-gend-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

n1-dual-dual-pl-same-same-same-fem-fem-fem-mid-coord-rule := basic-n-mid-coord-rule & monopoly-mid-coord-rule & dual-dual-pl-num-coord-rule & same-same-same-case-coord-rule & fem-fem-fem-gend-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

n1-dual-dual-pl-same-same-same-any-masc-masc-top-coord-rule := basic-n-top-coord-rule & monopoly-top-coord-rule & dual-dual-pl-num-coord-rule & same-same-same-case-coord-rule & any-masc-masc-gend-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

n1-dual-dual-pl-same-same-same-any-masc-masc-mid-coord-rule := basic-n-mid-coord-rule & monopoly-mid-coord-rule & dual-dual-pl-num-coord-rule & same-same-same-case-coord-rule & any-masc-masc-gend-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

n1-pl-pl-pl-same-same-same-masc-any-masc-top-coord-rule := basic-n-top-coord-rule & monopoly-top-coord-rule & pl-pl-pl-num-coord-rule & same-same-same-case-coord-rule & masc-any-masc-gend-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

n1-pl-pl-pl-same-same-same-masc-any-masc-mid-coord-rule := basic-n-mid-coord-rule & monopoly-mid-coord-rule & pl-pl-pl-num-coord-rule & same-same-same-case-coord-rule & masc-any-masc-gend-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

n1-pl-pl-pl-same-same-same-fem-fem-fem-top-coord-rule := basic-n-top-coord-rule & monopoly-top-coord-rule & pl-pl-pl-num-coord-rule & same-same-same-case-coord-rule & fem-fem-fem-gend-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

n1-pl-pl-pl-same-same-same-fem-fem-fem-mid-coord-rule := basic-n-mid-coord-rule & monopoly-mid-coord-rule & pl-pl-pl-num-coord-rule & same-same-same-case-coord-rule & fem-fem-fem-gend-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

n1-pl-pl-pl-same-same-same-any-masc-masc-top-coord-rule := basic-n-top-coord-rule & monopoly-top-coord-rule & pl-pl-pl-num-coord-rule & same-same-same-case-coord-rule & any-masc-masc-gend-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

n1-pl-pl-pl-same-same-same-any-masc-masc-mid-coord-rule := basic-n-mid-coord-rule & monopoly-mid-coord-rule & pl-pl-pl-num-coord-rule & same-same-same-case-coord-rule & any-masc-masc-gend-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

n1-sg-dual-pl-same-same-same-masc-any-masc-top-coord-rule := basic-n-top-coord-rule & monopoly-top-coord-rule & sg-dual-pl-num-coord-rule & same-same-same-case-coord-rule & masc-any-masc-gend-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

n1-sg-dual-pl-same-same-same-masc-any-masc-mid-coord-rule := basic-n-mid-coord-rule & monopoly-mid-coord-rule & sg-dual-pl-num-coord-rule & same-same-same-case-coord-rule & masc-any-masc-gend-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

n1-sg-dual-pl-same-same-same-fem-fem-fem-top-coord-rule := basic-n-top-coord-rule & monopoly-top-coord-rule & sg-dual-pl-num-coord-rule & same-same-same-case-coord-rule & fem-fem-fem-gend-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

n1-sg-dual-pl-same-same-same-fem-fem-fem-mid-coord-rule := basic-n-mid-coord-rule & monopoly-mid-coord-rule & sg-dual-pl-num-coord-rule & same-same-same-case-coord-rule & fem-fem-fem-gend-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

n1-sg-dual-pl-same-same-same-any-masc-masc-top-coord-rule := basic-n-top-coord-rule & monopoly-top-coord-rule & sg-dual-pl-num-coord-rule & same-same-same-case-coord-rule & any-masc-masc-gend-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

n1-sg-dual-pl-same-same-same-any-masc-masc-mid-coord-rule := basic-n-mid-coord-rule & monopoly-mid-coord-rule & sg-dual-pl-num-coord-rule & same-same-same-case-coord-rule & any-masc-masc-gend-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

n1-sg-pl-pl-same-same-same-masc-any-masc-top-coord-rule := basic-n-top-coord-rule & monopoly-top-coord-rule & sg-pl-pl-num-coord-rule & same-same-same-case-coord-rule & masc-any-masc-gend-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

n1-sg-pl-pl-same-same-same-masc-any-masc-mid-coord-rule := basic-n-mid-coord-rule & monopoly-mid-coord-rule & sg-pl-pl-num-coord-rule & same-same-same-case-coord-rule & masc-any-masc-gend-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

n1-sg-pl-pl-same-same-same-fem-fem-fem-top-coord-rule := basic-n-top-coord-rule & monopoly-top-coord-rule & sg-pl-pl-num-coord-rule & same-same-same-case-coord-rule & fem-fem-fem-gend-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

n1-sg-pl-pl-same-same-same-fem-fem-fem-mid-coord-rule := basic-n-mid-coord-rule & monopoly-mid-coord-rule & sg-pl-pl-num-coord-rule & same-same-same-case-coord-rule & fem-fem-fem-gend-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

n1-sg-pl-pl-same-same-same-any-masc-masc-top-coord-rule := basic-n-top-coord-rule & monopoly-top-coord-rule & sg-pl-pl-num-coord-rule & same-same-same-case-coord-rule & any-masc-masc-gend-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

n1-sg-pl-pl-same-same-same-any-masc-masc-mid-coord-rule := basic-n-mid-coord-rule & monopoly-mid-coord-rule & sg-pl-pl-num-coord-rule & same-same-same-case-coord-rule & any-masc-masc-gend-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

n1-dual-sg-pl-same-same-same-masc-any-masc-top-coord-rule := basic-n-top-coord-rule & monopoly-top-coord-rule & dual-sg-pl-num-coord-rule & same-same-same-case-coord-rule & masc-any-masc-gend-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

n1-dual-sg-pl-same-same-same-masc-any-masc-mid-coord-rule := basic-n-mid-coord-rule & monopoly-mid-coord-rule & dual-sg-pl-num-coord-rule & same-same-same-case-coord-rule & masc-any-masc-gend-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

n1-dual-sg-pl-same-same-same-fem-fem-fem-top-coord-rule := basic-n-top-coord-rule & monopoly-top-coord-rule & dual-sg-pl-num-coord-rule & same-same-same-case-coord-rule & fem-fem-fem-gend-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

n1-dual-sg-pl-same-same-same-fem-fem-fem-mid-coord-rule := basic-n-mid-coord-rule & monopoly-mid-coord-rule & dual-sg-pl-num-coord-rule & same-same-same-case-coord-rule & fem-fem-fem-gend-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

n1-dual-sg-pl-same-same-same-any-masc-masc-top-coord-rule := basic-n-top-coord-rule & monopoly-top-coord-rule & dual-sg-pl-num-coord-rule & same-same-same-case-coord-rule & any-masc-masc-gend-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

n1-dual-sg-pl-same-same-same-any-masc-masc-mid-coord-rule := basic-n-mid-coord-rule & monopoly-mid-coord-rule & dual-sg-pl-num-coord-rule & same-same-same-case-coord-rule & any-masc-masc-gend-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

n1-dual-pl-pl-same-same-same-masc-any-masc-top-coord-rule := basic-n-top-coord-rule & monopoly-top-coord-rule & dual-pl-pl-num-coord-rule & same-same-same-case-coord-rule & masc-any-masc-gend-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

n1-dual-pl-pl-same-same-same-masc-any-masc-mid-coord-rule := basic-n-mid-coord-rule & monopoly-mid-coord-rule & dual-pl-pl-num-coord-rule & same-same-same-case-coord-rule & masc-any-masc-gend-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

n1-dual-pl-pl-same-same-same-fem-fem-fem-top-coord-rule := basic-n-top-coord-rule & monopoly-top-coord-rule & dual-pl-pl-num-coord-rule & same-same-same-case-coord-rule & fem-fem-fem-gend-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

n1-dual-pl-pl-same-same-same-fem-fem-fem-mid-coord-rule := basic-n-mid-coord-rule & monopoly-mid-coord-rule & dual-pl-pl-num-coord-rule & same-same-same-case-coord-rule & fem-fem-fem-gend-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

n1-dual-pl-pl-same-same-same-any-masc-masc-top-coord-rule := basic-n-top-coord-rule & monopoly-top-coord-rule & dual-pl-pl-num-coord-rule & same-same-same-case-coord-rule & any-masc-masc-gend-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

n1-dual-pl-pl-same-same-same-any-masc-masc-mid-coord-rule := basic-n-mid-coord-rule & monopoly-mid-coord-rule & dual-pl-pl-num-coord-rule & same-same-same-case-coord-rule & any-masc-masc-gend-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

n1-pl-dual-pl-same-same-same-masc-any-masc-top-coord-rule := basic-n-top-coord-rule & monopoly-top-coord-rule & pl-dual-pl-num-coord-rule & same-same-same-case-coord-rule & masc-any-masc-gend-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

n1-pl-dual-pl-same-same-same-masc-any-masc-mid-coord-rule := basic-n-mid-coord-rule & monopoly-mid-coord-rule & pl-dual-pl-num-coord-rule & same-same-same-case-coord-rule & masc-any-masc-gend-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

n1-pl-dual-pl-same-same-same-fem-fem-fem-top-coord-rule := basic-n-top-coord-rule & monopoly-top-coord-rule & pl-dual-pl-num-coord-rule & same-same-same-case-coord-rule & fem-fem-fem-gend-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

n1-pl-dual-pl-same-same-same-fem-fem-fem-mid-coord-rule := basic-n-mid-coord-rule & monopoly-mid-coord-rule & pl-dual-pl-num-coord-rule & same-same-same-case-coord-rule & fem-fem-fem-gend-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

n1-pl-dual-pl-same-same-same-any-masc-masc-top-coord-rule := basic-n-top-coord-rule & monopoly-top-coord-rule & pl-dual-pl-num-coord-rule & same-same-same-case-coord-rule & any-masc-masc-gend-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

n1-pl-dual-pl-same-same-same-any-masc-masc-mid-coord-rule := basic-n-mid-coord-rule & monopoly-mid-coord-rule & pl-dual-pl-num-coord-rule & same-same-same-case-coord-rule & any-masc-masc-gend-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

n1-pl-sg-pl-same-same-same-masc-any-masc-top-coord-rule := basic-n-top-coord-rule & monopoly-top-coord-rule & pl-sg-pl-num-coord-rule & same-same-same-case-coord-rule & masc-any-masc-gend-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

n1-pl-sg-pl-same-same-same-masc-any-masc-mid-coord-rule := basic-n-mid-coord-rule & monopoly-mid-coord-rule & pl-sg-pl-num-coord-rule & same-same-same-case-coord-rule & masc-any-masc-gend-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

n1-pl-sg-pl-same-same-same-fem-fem-fem-top-coord-rule := basic-n-top-coord-rule & monopoly-top-coord-rule & pl-sg-pl-num-coord-rule & same-same-same-case-coord-rule & fem-fem-fem-gend-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

n1-pl-sg-pl-same-same-same-fem-fem-fem-mid-coord-rule := basic-n-mid-coord-rule & monopoly-mid-coord-rule & pl-sg-pl-num-coord-rule & same-same-same-case-coord-rule & fem-fem-fem-gend-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

n1-pl-sg-pl-same-same-same-any-masc-masc-top-coord-rule := basic-n-top-coord-rule & monopoly-top-coord-rule & pl-sg-pl-num-coord-rule & same-same-same-case-coord-rule & any-masc-masc-gend-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

n1-pl-sg-pl-same-same-same-any-masc-masc-mid-coord-rule := basic-n-mid-coord-rule & monopoly-mid-coord-rule & pl-sg-pl-num-coord-rule & same-same-same-case-coord-rule & any-masc-masc-gend-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

n1-bottom-coord-rule := conj-first-bottom-coord-rule & n-bottom-coord-phrase & pass-up-png-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

;;; Coordination Strategy 1

s1-top-coord-rule := basic-s-top-coord-rule & monopoly-top-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

s1-mid-coord-rule := basic-s-mid-coord-rule & monopoly-mid-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

s1-bottom-coord-rule := conj-first-bottom-coord-rule & s-bottom-coord-phrase &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

clause :+ [ SYNSEM.NON-LOCAL.QUE.LIST < > ].
